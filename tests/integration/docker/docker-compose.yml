services:
  fastapi:
    build:
      context: "../../../"
#      args:
#        - PREDICTION_SERVICE_ACCOUNT_CREDENTIALS=gcp_prediction_service_account.json
    platform: "linux/amd64"
    environment:
      GCP_MLFLOW_MODEL_ARTIFACT_BUCKET_NAME: mlflow-bucket
      STORAGE_EMULATOR_HOST: http://minio:9000
    ports:
      - "8080:8080"
    networks:
      - app

# Would be nice if GCP provided emulators for buckets :(
#  gcp-cloud-sdk:
#    image: google/cloud-sdk:emulators
#    environment:
#      CLOUDSDK_CORE_PROJECT: integration-tests
#    restart: unless-stopped
#    command: >
#      gcloud beta emulators storage start
#    ports:
#      - "8081:8081"
#    networks:
#      - app

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: miniominio
      MINIO_ROOT_PASSWORD: 5up3rPa55w0rd1!
      MINIO_ACCESS_KEY: YOUR1-ACCESS2-KEY3
      MINIO_SECRET_KEY: YOUR1-SECRET2-KEY3
    command: minio server /data/minio --console-address ":9090"
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9090}:9090"
    volumes:
      - minio:/data
    networks:
      - app

  mc:
    image: minio/mc:latest
    environment:
      MINIO_ACCESS_KEY: YOUR1-ACCESS2-KEY3
      MINIO_SECRET_KEY: YOUR1-SECRET2-KEY3
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      until (/usr/bin/mc config host add gcs https://storage.googleapis.com YOUR1-ACCESS2-KEY3 YOUR1-SECRET2-KEY3) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb gcs/mlflow-bucket/;
      /usr/bin/mc policy set download gcs/mlflow-bucket;
      exit 0;
      "
    depends_on:
      minio:
        condition: service_started
    network_mode: service:minio

networks:
  app:

volumes:
  minio: { }
